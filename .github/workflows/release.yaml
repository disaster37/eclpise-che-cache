name: 'build'


on:
   workflow_dispatch:
     inputs:
      version:
        descritpion: 'The che version to cache'
        required: true

jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Setup node
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    
    # Setup yarn
    - name: Install Yarn
      run: npm install -g yarn
    
    # Setup docker
    - uses: docker-practice/actions-setup-docker@master

    # Login to docker hub
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
    
    # che-plugin-registry
    - name: Checkout che-plugin-registry
      uses: actions/checkout@v2
      with:
        repository: eclipse-che/che-plugin-registry
        ref: "${{ github.event.inputs.version }}"
        path: che-plugin-registry 
    - name: Build offline che-plugin-registry
      run: |
        #!/bin/sh
        set -e
        yarn --version
        node --version
        cd che-plugin-registry
        rm -rf output && BUILDER=docker ./build.sh --tag ${{ github.event.inputs.version }} --registry quay.io --organization webcenter-che --rhel --offline
        docker push quay.io/webcenter-che/che-plugin-registry:${{ github.event.inputs.version }}

        # Build sidecard
        #for file in sidecars/*; do
        #  SIDECAR_NAME=$(echo "$file" | cut -d/ -f 2)
        #  PLATFORMS=$(cat sidecars/"$SIDECAR_NAME"/PLATFORMS)
        #  SHORT_SHA1=$(git rev-parse --short=7 HEAD)
        #  IMAGE_NAME=quay.io/webcenter-che/che-plugin-sidecar:"$SIDECAR_NAME"-"$SHORT_SHA1"
        #  echo "Building $IMAGE_NAME"
        #  docker buildx build --platform "$PLATFORMS" -t "$IMAGE_NAME" \
        #            --push sidecars/"$SIDECAR_NAME"/
        #done

        # Copye external images
        docker run --rm -t --entrypoint cat quay.io/webcenter-che/che-plugin-registry:${{ github.event.inputs.version }} /var/www/html/v3/external_images.txt | while read line
        do
            IMAGE=$(echo $line | cut -d'/' -f 3)
            echo "Copy image $line to quay.io/webcenter-che/$IMAGE"
            docker run --rm -t ananace/skopeo:latest copy docker://$line docker://quay.io/webcenter-che/$IMAGE
        done
    
    # che-devfile-registry
    - name: Checkout che-devfile-registry
      uses: actions/checkout@v2
      with:
        repository: eclipse-che/che-devfile-registry
        ref: "${{ github.event.inputs.version }}"
        path: che-devfile-registry
    - name: Build offline che-devfile-registry
      run: |
        set -e
        cd che-devfile-registry
        BUILDER=docker ./build.sh --tag ${{ github.event.inputs.version }} --registry quay.io --organization webcenter-che --rhel --offline
        docker push quay.io/webcenter-che/che-devfile-registry:${{ github.event.inputs.version }}
        cat output/v3/external_images.txt | while read line
        do
          IMAGE=$(echo $line | cut -d'/' -f 3)
          docker run --rm -t ananace/skopeo:latest copy docker://$line docker://quay.io/webcenter-che/$IMAGE
        done
    
    # che internal image
    - name: Clone Eclpise Che internal image
      run: |
        set -e
        docker run --rm -t ananace/skopeo:latest copy docker://quay.io/eclipse/che-server:${{ github.event.inputs.version }} docker://quay.io/webcenter-che/che-server:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest copy docker://quay.io/eclipse/che-postgres:${{ github.event.inputs.version }} docker:/quay.io/webcenter-che/che-postgres:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest copy docker://quay.io/eclipse/che-keycloak:${{ github.event.inputs.version }} docker://quay.io/webcenter-che/che-keycloak:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest copy docker://quay.io/eclipse/che-jwtproxy:${{ github.event.inputs.version }} docker://quay.io/webcenter-che/che-jwtproxy:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest copy docker://quay.io/eclipse/che-plugin-artifacts-broker:${{ github.event.inputs.version }} docker://quay.io/webcenter-che/che-plugin-artifacts-broker:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest copy docker://quay.io/eclipse/che-plugin-metadata-broker:${{ github.event.inputs.version }} docker://quay.io/webcenter-che/che-plugin-metadata-broker:${{ github.event.inputs.version }}