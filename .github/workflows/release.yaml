name: 'build'


on:
   workflow_dispatch:
     inputs:
      version:
        descritpion: 'The che version to cache'
        required: true

jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Setup node
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    
    # Setup yarn
    - name: Install Yarn
      run: npm install -g yarn
    
    # Setup docker
    - uses: docker-practice/actions-setup-docker@master

    # Login to docker hub
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # che-plugin-registry
    - name: Checkout che-plugin-registry
      uses: actions/checkout@v2
      with:
        repository: eclipse-che/che-plugin-registry
        ref: "${{ github.event.inputs.version }}"
        path: che-plugin-registry 
    - name: Build offline che-plugin-registry
      run: |
        #!/bin/sh
        set -e
        cd che-plugin-registry
        ./build.sh --tag ${{ github.event.inputs.version }} --registry index.docker.io --organization webcenter --rhel --offline
        cat output/v3/external_images.txt | while read line
        do
          IMAGE=$(echo $line | cut -d'/' -f 3)
          docker run --rm -t ananace/skopeo:latest docker://$line docker://webcenter/$IMAGE
        done
    
    # che-devfile-registry
    - name: Checkout che-devfile-registry
      uses: actions/checkout@v2
      with:
        repository: eclipse-che/che-devfile-registry
        ref: "${{ github.event.inputs.version }}"
        path: che-devfile-registry
    - name: Build offline che-devfile-registry
      run: |
        set -e
        cd che-devfile-registry
        ./build.sh --tag ${{ github.event.inputs.version }} --registry index.docker.io --organization webcenter --rhel --offline
    
    # che internal image
    - name: Clone Eclpise Che internal image
      run: |
        set -e
        docker run --rm -t ananace/skopeo:latest docker://quay.io/eclipse/che-server:${{ github.event.inputs.version }} docker://webcenter/che-server:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest docker://quay.io/eclipse/che-postgres:${{ github.event.inputs.version }} docker://webcenter/che-postgres:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest docker://quay.io/eclipse/che-keycloak:${{ github.event.inputs.version }} docker://webcenter/che-keycloak:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest docker://quay.io/eclipse/che-jwtproxy:${{ github.event.inputs.version }} docker://webcenter/che-jwtproxy:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest docker://quay.io/eclipse/che-plugin-artifacts-broker:${{ github.event.inputs.version }} docker://webcenter/che-plugin-artifacts-broker:${{ github.event.inputs.version }}
        docker run --rm -t ananace/skopeo:latest docker://quay.io/eclipse/che-plugin-metadata-broker:${{ github.event.inputs.version }} docker://webcenter/che-plugin-metadata-broker:${{ github.event.inputs.version }}